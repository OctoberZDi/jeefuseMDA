<%@ jet package="com.jeefuse.mda.gen.template.main.java.render" imports="net.taylor.mda.generator.parse.NameRuled.className.* net.taylor.mda.generator.parse.NameRuled.* net.taylor.mda.generator.parse.stereotype.* java.util.List net.taylor.mda.generator.parse.* net.taylor.mda.generator.parse.entity.* java.util.Iterator org.eclipse.uml2.uml.Class org.eclipse.uml2.uml.Package org.eclipse.uml2.uml.* net.taylor.mda.generator.util.* org.eclipse.emf.codegen.util.*" class="EntityRenderUtil" %>
<%Class uml2Class = (Class) argument;Package uml2Package = uml2Class.getPackage();%>
<%
/*******clazz wrap********/	
UmlClassWrap clazzWrap=new UmlClassWrap(uml2Class);

// model RenderUtil define
ClassNameDefineCommon renderUtilDefine=clazzWrap.getNameDefineRenderUtil();
String modelRenderUtilPackageName=renderUtilDefine.getPackageQualifiedName();
String modelRenderUtilClassName=renderUtilDefine.getClassCapName();
%><%@ include file="../../../../Header.jetinc"%>
package <%=modelRenderUtilPackageName%>;

<%ImportManager importManager = ImportHelper.makeImportManager("");%>
<%importManager.addImport("java.util.List");%>
<%//importManager.addImport("com.jeefuse.base.modules.json.JsonWriter");%>
<%importManager.addImport("com.jeefuse.base.utils.page.Page");%>
<%importManager.addImport("com.jeefuse.base.web.utils.RenderUtil");%>
<%//importManager.addImport("com.jeefuse.base.web.result.ResultMsg");%>
<%importManager.addImport("com.jeefuse.base.modules.json.ResultJsonWriter");%>
<%importManager.addImport("com.jeefuse.base.modules.json.FlexidGridJsonWriter");%>
<%
//model entity define
ClassNameDefineCommon entityDefine=clazzWrap.getNameDefineEntity();
String modelEntityQualifiedName=entityDefine.getClassQualifiedName();
String modelEntityName=entityDefine.getClassCapName();
//String modelEntityUncapName=entityDefine.getClassUncapName();
importManager.addImport(modelEntityQualifiedName);


//model FlexiGridJsonWrite define
ClassNameDefineCommon flexiGridJsonWriteDefine=clazzWrap.getNameDefineFlexiGridJsonWrite();
String flexiGridJsonWriteQualifiedName=flexiGridJsonWriteDefine.getClassQualifiedName();
String flexiGridJsonWriteClassName=flexiGridJsonWriteDefine.getClassCapName();
//String flexiGridJsonWriteClassUncapName=flexiGridJsonWriteDefine.getClassCapName();
importManager.addImport(flexiGridJsonWriteQualifiedName);

// model ResultJsonWrite define
ClassNameDefineCommon resultMsgJsonWriterDefine=clazzWrap.getNameDefineResultMsgJsonWriter();
String resultMsgJsonWriterQualifiedName=resultMsgJsonWriterDefine.getClassQualifiedName();
String resultMsgJsonWriterClassName=resultMsgJsonWriterDefine.getClassCapName();
//String resultMsgJsonWriterClassUncapName=resultMsgJsonWriterDefine.getClassCapName();
importManager.addImport(resultMsgJsonWriterQualifiedName);
%>
<%
StringBuffer importStringBuffer = stringBuffer;
int importInsertionPoint = stringBuffer.length();
importManager.addCompilationUnitImports(stringBuffer.toString());
%>

/**
 * <%=modelEntityName%> render util.
 * 
 * @author <%=System.getProperty("user.name")%>
 * @generated
 */
public class <%=modelRenderUtilClassName%>  {

	/**
	 * 输出 <%=modelEntityName%> ResultMsg json对象格式数据.
	 * @generated
	 */
	static public void jsonResultMsg(boolean success, <%=modelEntityName%> model, String message) {
		ResultJsonWriter<<%=modelEntityName%>> jsonWriter=new <%=resultMsgJsonWriterClassName%>(success, model, message);
		RenderUtil.renderJson(jsonWriter);
	}

	/**
	 * 输出<%=modelEntityName%> FlexiGrid json对象格式数据.
	 * @generated
	 */
	static public void jsonFlexiGrid(int pageNo, long total, List<<%=modelEntityName%>> items) {
		FlexidGridJsonWriter<<%=modelEntityName%>> jsonWriter = new <%=flexiGridJsonWriteClassName%>(pageNo, total, items);
		RenderUtil.renderJson(jsonWriter);
	}
	
	/**
	 * 输出<%=modelEntityName%> FlexiGrid json对象格式数据.
	 * @generated
	 */
	static public void jsonFlexiGrid(Page<<%=modelEntityName%>> page) {
		jsonFlexiGrid(page.getPageNo(), page.getTotalCount(), page.getResult());
	}
	
<%/********is apply tree********/%>
<%if(ModelStereoTypeHelper.isApplyModel_Tree(uml2Class)){%>
<%importManager.addImport("com.jeefuse.base.modules.tree.renders.generic.TreeNodeGenericConstructUtil");%>
<%importManager.addImport("com.jeefuse.base.modules.tree.renders.generic.TreeNodeGeneric");%>
<%importManager.addImport("com.jeefuse.base.modules.json.JsonWriter");%>
<%
// model FlexiGridJsonWrite
String modelQualifiedNameForTreeGridJsonWriter=MdaHelper.getModelQualifiedName(uml2Class,PKGSuffix.TreeGridJsonWriter,ModelNameSuffix.TreeGridJsonWriter);
String modelClassNameForTreeGridJsonWriter=MdaHelper.getModelClassName(uml2Class,ModelNameSuffix.TreeGridJsonWriter);
importManager.addImport(modelQualifiedNameForTreeGridJsonWriter);
%>
	/**
	 * 输出<%=modelEntityName%> FlexiTreeGrid json对象格式数据.
	 * 
	 */
	public static void jsonFlexiTreeGrid(long totalCount, List<<%=modelEntityName%>> items) {
		TreeNodeGeneric<<%=modelEntityName%>> treeNode = TreeNodeGenericConstructUtil.constructTreeNode(items);
		JsonWriter jsonWriter = new <%=modelClassNameForTreeGridJsonWriter%>(treeNode.getChildrens(), totalCount);
		RenderUtil.renderJson(jsonWriter);
	}
<%}%>

<%if(FileStereotypeHelper.isClass_file(uml2Class)||FileStereotypeHelper.isClass_Image(uml2Class)){//应用了File or Image%>
	/**
	 * 输出 <%=modelEntityName%> ResultMsg json对象格式数据.
	 * @generated
	 */
	static public void htmlResultMsg(boolean success, <%=modelEntityName%> model, String message) {
		ResultJsonWriter<<%=modelEntityName%>> jsonWriter=new <%=resultMsgJsonWriterClassName%>(success, model, message);
		RenderUtil.renderHtml(jsonWriter);
	}
<%}%>
}
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>