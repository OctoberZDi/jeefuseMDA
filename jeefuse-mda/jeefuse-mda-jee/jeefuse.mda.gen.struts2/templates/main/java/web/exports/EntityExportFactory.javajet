<%@ jet package="com.jeefuse.mda.gen.template.main.java.exports" imports="net.taylor.mda.generator.parse.NameRuled.nameRuled.* net.taylor.mda.generator.parse.NameRuled.className.* net.taylor.mda.generator.parse.NameRuled.* java.util.ArrayList net.taylor.mda.generator.parse.* java.util.Iterator java.util.List net.taylor.mda.generator.parse.entity.* org.eclipse.uml2.uml.Class org.eclipse.uml2.uml.Package org.eclipse.uml2.uml.* net.taylor.mda.generator.util.* org.eclipse.emf.codegen.util.*" class="EntityExportFactory" %>
<%Class uml2Class = (Class) argument;Package uml2Package = uml2Class.getPackage();%>
<%
/*******clazz wrap********/	
UmlClassWrap clazzWrap=new UmlClassWrap(uml2Class);
String modelCommentName=clazzWrap.getCommentName();

//model exportFactory 
ClassNameDefineCommon exportFactoryDefine=clazzWrap.getNameDefineExportFactory();
String modelExportFactoryPackageName=exportFactoryDefine.getPackageQualifiedName();
String modelExportFactoryClassName=exportFactoryDefine.getClassName();

%>
<%@ include file="../../../../Header.jetinc"%>
package <%=modelExportFactoryPackageName%>;
<%ImportManager importManager = ImportHelper.makeImportManager("");%>
<%importManager.addImport("java.util.Collection");%>
<%importManager.addImport("javax.servlet.http.HttpServletRequest");%>
<%importManager.addImport("javax.servlet.http.HttpServletResponse");%>
<%importManager.addImport("com.jeefuse.base.modules.export.ModelExportFactory");%>
<%importManager.addImport("com.jeefuse.base.model.parse.DefaultPropertyValueGet");%>

<%
//model entity define
ClassNameDefineCommon entityDefine=clazzWrap.getNameDefineEntity();
String modelEntityQualifiedName=entityDefine.getClassQualifiedName();
String modelEntityName=entityDefine.getClassCapName();
importManager.addImport(modelEntityQualifiedName);

//model service define
ClassNameDefineCommon serviceDefine=clazzWrap.getNameDefineService();
String modelServiceQualifiedName=serviceDefine.getClassQualifiedName();
importManager.addImport(modelServiceQualifiedName);

//model field 
ClassNameDefineCommon entityFieldDefine=clazzWrap.getNameDefineEntityField();
String modelFieldQualifiedName=entityFieldDefine.getClassQualifiedName();
String modelFieldName=entityFieldDefine.getClassCapName();
String modelFieldUncapName=entityFieldDefine.getClassUncapName();
importManager.addImport(modelFieldQualifiedName);

//model propertyValueGet
//ClassNameDefineCommon entityPropertyValueGetDefine=clazzWrap.getNameDefineEntityPropertyValueGet();
//String modelPropertyValueGetQualifiedName=entityPropertyValueGetDefine.getClassQualifiedName();
//String modelPropertyValueGetClassName=entityPropertyValueGetDefine.getClassCapName();
//importManager.addImport(modelPropertyValueGetQualifiedName);

//model excel export file name
String ExcelExportTemplateFileCapName=clazzWrap.getNamedRuleProperty(PropertyNamedRuleKind.ExcelExportTemplateFileName);
String ExcelExportTemplateFileUncapName=clazzWrap.getNamedRuleProperty(PropertyNamedRuleKind.ExcelExportTemplateFileName);

%>

<%
StringBuffer importStringBuffer = stringBuffer;
int importInsertionPoint = stringBuffer.length();
importManager.addCompilationUnitImports(stringBuffer.toString());
%>

/**
 * <%=modelCommentName%> 数据导入工厂.
 *
 * @author <%=System.getProperty("user.name")%>
 * @generated
 */
public class <%=modelExportFactoryClassName%> {
	/** @generated */
	private static final String <%=ExcelExportTemplateFileUncapName%>= "<%=modelCommentName%>数据Excel导出文件";

	/** @generated */
	public static String get<%=ExcelExportTemplateFileCapName%>() {
<%//importManager.addImport("com.jeefuse.base.utils.common.DateUtil");%>
<%importManager.addImport("java.text.DateFormat");%>
<%importManager.addImport("java.text.SimpleDateFormat");%>
<%importManager.addImport("java.util.Date");%>
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd-HH:mm");
		return <%=ExcelExportTemplateFileUncapName%> + format.format(new Date());
	}
	
	/**
	 * 导出pdf文件.
	 * 
	 * @generated
	 */
	public static void pdfExport(HttpServletRequest request, HttpServletResponse response, String exportFileName,
			<%=modelFieldName%>[] <%=modelFieldUncapName%>, Collection<<%=modelEntityName%>> items) throws Exception {
		ModelExportFactory.createPdfExport(request, response, exportFileName, <%=modelFieldUncapName%>, items,
				new DefaultPropertyValueGet<<%=modelEntityName%>>()).export();
	}

	/**
	 * 导出pdf文件.
	 * 
	 * @generated
	 */
	public static void pdfExport(HttpServletRequest request, HttpServletResponse response,<%=modelFieldName%>[] <%=modelFieldUncapName%>, Collection<<%=modelEntityName%>> items) throws Exception {
		pdfExport(request, response, <%=ExcelExportTemplateFileUncapName%>, <%=modelFieldUncapName%>, items);
	}

	/**
	 * 导出<%=modelCommentName%>所有字段数据.
	 * 
	 * @generated
	 */
	public static void pdfExportAllField(HttpServletRequest request, HttpServletResponse response,
			String exportFileName, Collection<<%=modelEntityName%>> items) throws Exception {
		pdfExport(request, response, exportFileName, <%=modelFieldName%>.values(), items);
	}

	/**
	 * 导出excel文件.
	 * 
	 * @generated
	 */
	public static void excelExport(HttpServletResponse response,<%=modelFieldName%>[] <%=modelFieldUncapName%>, Collection<<%=modelEntityName%>> items) throws Exception {
		ModelExportFactory.createExcelExport(response, <%=ExcelExportTemplateFileUncapName%>, <%=modelFieldUncapName%>, items, new DefaultPropertyValueGet<<%=modelEntityName%>>())
				.export();
	}

	/**
	 * 导出<%=modelCommentName%>所有字段数据.
	 * 
	 * @generated
	 */
	public static void excelExportAllField(HttpServletResponse response,Collection<<%=modelEntityName%>> items)
			throws Exception {
		excelExport(response,<%=modelFieldName%>.values(),items);
	}

}
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>
