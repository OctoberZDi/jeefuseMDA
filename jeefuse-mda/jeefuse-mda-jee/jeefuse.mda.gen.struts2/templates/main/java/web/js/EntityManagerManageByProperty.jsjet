<%@ jet package="com.jeefuse.mda.gen.template.main.java.js" imports="net.taylor.mda.generator.parse.NameRuled.nameRuled.* net.taylor.mda.generator.parse.NameRuled.* java.util.ArrayList net.taylor.mda.generator.parse.stereotype.* net.taylor.mda.generator.parse.* java.util.Iterator java.util.List org.eclipse.uml2.uml.Class org.eclipse.uml2.uml.Package org.eclipse.uml2.uml.* net.taylor.mda.generator.util.* net.taylor.mda.generator.parse.entity.* net.taylor.mda.generator.parse.page.* org.eclipse.emf.codegen.util.*" class="EntityManagerJSManageByProperty" %>
<%Property curProperty = (Property) argument;Package uml2Package = curProperty.getNearestPackage();%>
<%Class ownerClass=(Class)curProperty.getOwner();%>
<%String ownerClassCommentName=TypeHelper.getDocumentationOrName(ownerClass);%>
<%UmlClassByPropertyWrap named=new UmlClassByPropertyWrap(curProperty);%>
<%Class uml2Class=ownerClass;%>
$(function(){
	var mainheight = document.documentElement.clientHeight;
	var gridpm = 58; //GridHead，toolbar，footer,gridmargin
	var h = mainheight - gridpm-$("#header").outerHeight(true);
	var w = $("#first-content").width();
    var option = {
        height: h, 
        width: w,
        url: ctx+'<%=named.getUrl(WebUrlName.listOutJson)%>',
        colModel: [
<%
Property idProperty=EntityHelper.getIDProperty(uml2Class);
Iterator<Property> simplePropertyList=ViewListHelper.getViewListPropertiesFromSimple(uml2Class).iterator();
Iterator<Property> m2oPropertyList=ViewListHelper.getViewListPropertiesFromM2o(uml2Class).iterator();
Iterator<Property> o2oPropertyList=ViewListHelper.getViewListPropertiesFromO2o(uml2Class).iterator();
boolean firstLine=true;
%>
<%for (;simplePropertyList.hasNext();){//process simpleProperty%>
<%		Property property=simplePropertyList.next();%>
<%		if(property.getName().equals(curProperty.getName())){%>
<%			continue;%>
<%		}%>
<% 		String propertyCommentName=TypeHelper.getDocumentationOrName(property);%>
<% 		String propertyUncapSafeName=NameHelper.uncapSafeName(property);%>
<% 		int width=ViewListHelper.getViewListWidth(property);%>
<% 		boolean sortable=ViewListHelper.isSortable(property);%>
<%		//process apply enumeration%>
<%		Enumeration enumeration=EnumKindHelper.getAppliedEnumKindEnumeration(property);%>
<%		if(null!=enumeration){%>
<%			//String modelEnumQualifiedName=MdaHelper.getModelQualifiedName(enumeration,PKGSuffix.enumeration,ModelNameSuffix.enumeration);%>
<%			String modelEnumName=MdaHelper.getModelClassName(enumeration,ModelNameSuffix.enumeration);%>
<%			//String modelEnumJsoncapName=NamedUtil.getPropertyNamed(enumeration,PropertyNamedRuleKind.elementJsonNamed);%>
		   <%if(firstLine){firstLine=false;}else{%>,<%}%>{ display: '<%=propertyCommentName%>',name: '<%=propertyUncapSafeName%>',width: <%=width%>, sortable: <%=sortable%>, align: 'left',process:format<%=modelEnumName%>}
<%		}else{%>
		   <%if(firstLine){firstLine=false;}else{%>,<%}%>{ display: '<%=propertyCommentName%>',name: '<%=propertyUncapSafeName%>',width: <%=width%>, sortable: <%=sortable%>, align: 'left'}
<%		}%>
<%}%>
<%for (;m2oPropertyList.hasNext();){//process m2oPropertyList%>
<%		Property property=m2oPropertyList.next();%>
<%		if(property.getName().equals(curProperty.getName())){%>
<%			continue;%>
<%		}%>
<%		Class propertyType = (Class) property.getType();%>
<% 		String propertyTypeCommentName=TypeHelper.getDocumentationOrName(propertyType);%>
<% 		String propertyUncapSafeName=NameHelper.uncapSafeName(property);%>
<% 		int width=ViewListHelper.getViewListWidth(property);%>
<% 		boolean sortable=ViewListHelper.isSortable(property);%>
<% 		//Property relM2OIdProperty=EntityHelper.getIDProperty(propertyType);%>
<%		//String relM2OIdPropertyName=NameHelper.uncapSafeName(relM2OIdProperty);%>
<% 		String listLabelPropertyUncapSafeName=ViewListHelper.getViewListLabelRelPropertyName(property);%>
<% 		String listLabelPropertyComment=ViewListHelper.getViewListLabelRelPropertyComment(property);%>
		  <%if(firstLine){firstLine=false;}else{%>,<%}%>{ display: '<%=propertyTypeCommentName%><%=listLabelPropertyComment%>',name: '<%=propertyUncapSafeName%>.<%=listLabelPropertyUncapSafeName%>',width: <%=width%>, sortable: <%=sortable%>, align: 'left'}
<%}%>
<%for (;o2oPropertyList.hasNext();){//process o2oPropertyList%>
<%		Property property=o2oPropertyList.next();%>
<%		if(property.getName().equals(curProperty.getName())){%>
<%			continue;%>
<%		}%>
<%		Class propertyType = (Class) property.getType();%>
<% 		String propertyTypeCommentName=TypeHelper.getDocumentationOrName(propertyType);%>
<% 		String propertyUncapSafeName=NameHelper.uncapSafeName(property);%>
<% 		int width=ViewListHelper.getViewListWidth(property);%>
<% 		boolean sortable=ViewListHelper.isSortable(property);%>
<% 		//Property relM2OIdProperty=EntityHelper.getIDProperty(propertyType);%>
<%		//String relM2OIdPropertyName=NameHelper.uncapSafeName(relM2OIdProperty);%>
<% 		String listLabelPropertyUncapSafeName=ViewListHelper.getViewListLabelRelPropertyName(property);%>
<% 		String listLabelPropertyComment=ViewListHelper.getViewListLabelRelPropertyComment(property);%>
		   <%if(firstLine){firstLine=false;}else{%>,<%}%>{ display: '<%=propertyTypeCommentName%><%=listLabelPropertyComment%>',name: '<%=propertyUncapSafeName%>.<%=listLabelPropertyUncapSafeName%>',width: <%=width%>, sortable: <%=sortable%>, align: 'left'}
<%}%>
		],      
		indexId:'<%=NameHelper.uncapSafeName(idProperty)%>',
		sortname: "<%=OrderByHelper.getOrderField(uml2Class)%>",
		sortorder: "<%=OrderByHelper.getOrderMode(uml2Class)%>",
		searchparam:searchparamsCall,
		autoload: true,
		showcheckbox: true,
		usepager: true,
		showseq:true,
        rowhandler: gridContextmenu,
		rowbinddata: false,
		onRowDblclick:onRowDblclick
    };
    //search params
    function searchparamsCall(){
		var params=$("#firstSearchForm").serializeArray();
     	return params;
	}
	//format
	<%//code kind define%>
<%List<Property> codeKindPropertiesList=EnumKindHelper.getPropertiesAppliedEnumKind(uml2Class);%>
<%if(null!=codeKindPropertiesList&&codeKindPropertiesList.size()>0){%>
<%	for(Property property:codeKindPropertiesList){%>
<%		Enumeration enumeration=EnumKindHelper.getAppliedEnumKindEnumeration(property);%>
<%		if(null!=enumeration){%>
<%//			String modelEnumQualifiedName=MdaHelper.getModelQualifiedName(enumeration,PKGSuffix.enumeration,ModelNameSuffix.enumeration);%>
<%			String modelEnumName=MdaHelper.getModelClassName(enumeration,ModelNameSuffix.enumeration);%>
<%			String modelEnumJsoncapName=NamedUtil.getPropertyNamed(enumeration,PropertyNamedRuleKind.elementJsonNamed);%>
	function format<%=modelEnumName%>(value, row) {
		return <%=modelEnumJsoncapName%>[value];
	}
<%		}%>
<%	}%>
<%}%>

    grid = $("#dataGrid").flexigrid(option);
    
    //validate
<%List<Property> validatePropertyList=new ArrayList<Property>();%>    
<%List<Property> searchPropertyList=ViewSearchHelper.getSearchTextFieldPropertiesFromSimple(uml2Class);%>
<%for(Iterator<Property> iter=searchPropertyList.iterator();iter.hasNext();){
	Property property=iter.next();
	if (TypeHelper.isDecimal(property) || TypeHelper.isDouble(property.getType())) {
		validatePropertyList.add(property);
	}
	if (TypeHelper.isInteger(property) || TypeHelper.isLong(property.getType())) {
		validatePropertyList.add(property);
	}
	if (TypeHelper.isDate(property)) {
		validatePropertyList.add(property);
	}
}%>
<%if((null!=searchPropertyList&&searchPropertyList.size()>0)){%>
	searchFormValidator=$("#firstSearchForm").validate({
		rules : {
<%	int count=0;%>
<%	for (int i=0;i<validatePropertyList.size();i++){%>
<%		Property property=validatePropertyList.get(i);%>
<%		String jqueryValidate=PageHelper.getJqueryValidateForSearch(property);%>
<%		if(null!=jqueryValidate){%>
<% 			String propertyCommentName=TypeHelper.getDocumentationOrName(property);%>
<%  		if(ViewInputHelper.isViewInputDatePicker(property)){//process datePicker%>
<% 			String propertyUncapSafeName=NameHelper.uncapSafeName(property);%>
<%			String dateSearchStartName=NamedUtil.getPropertyNamed(property,PropertyNamedRuleKind.dateSearchStartName);%>
<% 			String dateSearchStartUncapSafeName=NameHelper.uncapName(dateSearchStartName);%>
<%			String dateSearchEndName=NamedUtil.getPropertyNamed(property,PropertyNamedRuleKind.dateSearchEndName);%>
<% 			String dateSearchEndNameUncapSafeName=NameHelper.uncapName(dateSearchEndName);%>
				<%if(i!=0){%>,<%}%><%=dateSearchStartUncapSafeName%>:{<%=jqueryValidate%>}//<%=++count%> <%=propertyCommentName%>
				,<%=dateSearchEndNameUncapSafeName%>:{<%=jqueryValidate%>}//<%=++count%> <%=propertyCommentName%>
<%		}%>
<%		else if(!ClassHelper.isSimple(property)&&null!=jqueryValidate&&!jqueryValidate.trim().equals("")){%>
<% 				//String propertySelectListKey=ViewInputHelper.getRelForListKey(property);%>
<%				Class propertyType = (Class) property.getType();%>
<%				//String propertyTypeComment = TypeHelper.getDocumentationOrName(propertyType);%>
<% 				Property propertyTypeIdProperty=EntityHelper.getIDProperty(propertyType);%>
<% 				String propertyTypeIdPropertyUncapSafeName=NameHelper.uncapSafeName(propertyTypeIdProperty);%>
				<%if(i!=0){%>,<%}%>"<%=NameHelper.getUncapName(property)%>.<%=propertyTypeIdPropertyUncapSafeName%>":{<%=jqueryValidate%>}//<%=++count%> <%=propertyCommentName%>						
<%			}else{%>
				<%if(i!=0){%>,<%}%><%=NameHelper.getUncapName(property)%>:{<%=jqueryValidate%>}//<%=++count%> <%=propertyCommentName%>
<%			}%>
<%		}%>	
<%	}%>
    	},
    	errorType: "bftip"
	});
<%}%>	
<%for (int i=0;i<searchPropertyList.size();i++){%>	
<%	Property property=searchPropertyList.get(i);%>
<%  if(ViewInputHelper.isViewInputDatePicker(property)){//process datePicker%>
<% 		String propertyUncapSafeName=NameHelper.uncapSafeName(property);%>
<%		String dateSearchStartName=NamedUtil.getPropertyNamed(property,PropertyNamedRuleKind.dateSearchStartName);%>
<% 		String dateSearchStartUncapSafeName=NameHelper.uncapName(dateSearchStartName);%>
<%		String dateSearchEndName=NamedUtil.getPropertyNamed(property,PropertyNamedRuleKind.dateSearchEndName);%>
<% 		String dateSearchEndNameUncapSafeName=NameHelper.uncapName(dateSearchEndName);%>

	//process <%=propertyUncapSafeName%> render
	$("#<%=dateSearchStartUncapSafeName%>,#<%=dateSearchEndNameUncapSafeName%>").datepickerRange({startEl:'<%=dateSearchStartUncapSafeName%>',endEl:'<%=dateSearchEndNameUncapSafeName%>'});
<%	}%>
<%}%>
<%String byPropertyIdName=named.getValueNameWithUnderLine();%>
<%String byPropertyIdPath=named.getValueName();%>
    //variate
    var <%=byPropertyIdName%>=$('#<%=byPropertyIdName%>').val();
    config.inputUrl=ctx+'<%=named.getUrl(WebUrlName.input)%>?<%=byPropertyIdPath%>='+<%=byPropertyIdName%>;
    config.editUrl=ctx+'<%=named.getUrl(WebUrlName.edit)%>?<%=byPropertyIdPath%>='+<%=byPropertyIdName%>;
    config.deleteOutJsonUrl=ctx+'<%=named.getUrl(WebUrlName.deleteOutJson)%>?<%=byPropertyIdPath%>='+<%=byPropertyIdName%>;
    config.deleteOutJsonAllUrl=ctx+'<%=named.getUrl(WebUrlName.deleteAllOutJson)%>?<%=byPropertyIdPath%>='+<%=byPropertyIdName%>;
});
var grid;
var searchFormValidator;
var config={
	baseTitle:"<%=ownerClassCommentName%>管理",
	inputUrl:null,
	editUrl:null,
	deleteOutJsonUrl:null,
	deleteOutJsonAllUrl:null
};
/******contenxtmenu*****/
var imgPath=ctx+"/resources/style/default/contextmenu/images/";
var menu = {
		width : 150
		,items : [
				 {text : "刷新",icon : imgPath+"table_refresh.png",alias : "refresh",action : contextMenuClick}
				,{type: "splitLine" }
				,{text : "新增",icon :imgPath+"view.png",alias : "add",action :contextMenuClick}
				,{text : "编辑",icon : imgPath+"edit.png",alias : "edit",action : contextMenuClick}
				,{type: "splitLine" }
				,{text : "删除该项记录",icon : imgPath+"rowdelete.png",alias : "deleteCurrent",action : contextMenuClick}
				,{text : "删除所选记录",icon : imgPath+"rowdelete.png",alias : "deleteSels",action : contextMenuClick}
				,{text : "删除所有记录",icon : imgPath+"rowdelete.png",alias : "deleteAll",action : contextMenuClick}
				]
	};
function contextMenuClick(target) {
	var id = $(target).attr("id").substr(3);
	var rowIdx = $(target).attr("seq");
	var cmd = this.data.alias;
	switch(cmd){
		case 'add':
			var title=config.baseTitle+'->新增';
			newWinOpen({title:title});
			break;
		case 'edit':
			var title = config.baseTitle+'->编辑 (序号:' + rowIdx + ')';
			var url=goolov.addUrlParams(config.editUrl,"id="+id);
			editWinOpen( {title:title,url:url});
			break;
		case 'deleteSels':
			delData();
			break;
		case 'deleteAll':
			delAllData();
			break;
		case 'refresh':
			refresh();
			break;
	}
};
function gridContextmenu(row) {
	$(row).contextmenu(menu);
} 
/******searchForm validate check******/
function searchFormValidCheck(){
	searchFormValidator.form();
	if(!searchFormValidator.valid()){
 		var invalideNum=searchFormValidator.numberOfInvalids();
	    if(invalideNum>0){
	    	goolov.growl.success('有<font color=red> '+invalideNum+'</font> 个查询选项未填写正确!');
		    return false;
	    }
	}
	return true;
}
/******refresh grid *******/
function reloadGrid(setting){
	if(searchFormValidCheck()){
		grid.flexReload(setting?setting:{});
	}
}
/******refresh  *******/
function refresh(){
	reloadGrid();
}
/******reset clear *******/
function clear(){
	document.getElementById('firstSearchForm').reset();
	searchFormValidator.resetForm();
	reloadGrid({newp:1});
}
/******search*******/
function firstSearch(){
	reloadGrid({newp:1});
}
/******add data**********/
var newWin;
function newWinOpen(settings){
	if(!newWin){
		var title=config.baseTitle+'->新增';
		var url=config.inputUrl;
		newWin=new goolov.winbox({
			width:goolov.winWidth(<%=PageHelper.getWinWidth(uml2Class)%>),
			height:goolov.winHeight(<%=PageHelper.getWinHeight(uml2Class)%>),
			title:title,
			url:url
		});
	}
	newWin.open(settings);
}
function newWinClose(){
	newWin.close();
}
function newWinCloseAndRefresh(){
	newWinClose();
	refresh();
}
function newData(){
	var title=config.baseTitle+'->新增';
	var parentId=$('#parentId').val();
	var url=goolov.addUrlParams(config.inputUrl,"parentId="+parentId);
	newWinOpen({title : title,url:url});
}
/******edit data window**********/
var editWin;
function editWinOpen(settings){
	if(!editWin){
		editWin=new goolov.winbox({
			width:goolov.winWidth(<%=PageHelper.getWinWidth(uml2Class)%>),
			height:goolov.winHeight(<%=PageHelper.getWinHeight(uml2Class)%>)
		});
	}
	editWin.open(settings);
}
function editWinClose(){
	editWin.close();
}
function editWinCloseAndRefresh(){
	editWinClose();
	refresh();
}
function onRowDblclick(target){
	var id = $(target).attr("id").substr(3);
	var rowIdx=$(target).attr("seq");
	var title=config.baseTitle+'->编辑 (序号:'+rowIdx+')';
	var url=goolov.addUrlParams(config.editUrl,"id="+id);
	editWinOpen({title:title,url:url});
}
function editData(){
	var ids=grid.getCheckedRows();
	var selCount=ids.length;
	if (selCount== 0) {
		goolov.growl.info('请选择需要修改的记录,或双击需要编辑的行.');
		return;
	}
	if(selCount>1){
		goolov.growl.info('一次只能选择修改一项记录.');
		return;
	}
	var id=ids[0];
	edit(id);
}
function edit(id){
	if(!id){
		goolov.growl.info('请选择需要修改的记录,或双击需要编辑的行.');
		return;
	}
	var rowtr=grid.getRowDom(id);//获取该ID的行元素.
	var rowIdx=$(rowtr).attr("seq");
	var title=config.baseTitle+'->编辑 (序号:'+rowIdx+')';
	var url=goolov.addUrlParams(config.editUrl,"id="+id);
	var opts={title:title,url:url};
	editWinOpen(opts);
}
/**********add row data**************/
function addRowData(row){
	var indexId=grid.getIndexId();
	var rowTr=grid.getRowDom(row[indexId]);////获取该ID的行元素.;
	if (rowtr.length==0) {
		grid.flexAddRowData(row);		
	}else{
		grid.flexEditRowData(rowtr[0],row);
	}
}
/******del data**********/
function delData(){
	var ids=grid.getCheckedRows();
	deleteOutJson(ids);
}
function del(id){
	if(!id){
		goolov.growl.info('当前选择无效!');
		return;
	}
	var ids=new Array(id);
	deleteOutJson(ids);
}
/******del data process**********/
function deleteOutJson(idsArray){
	if (!idsArray||!$.isArray(idsArray)) {
		goolov.growl.info('当前选择无效!');
		return;
	}
	if (idsArray.length==0) {
		goolov.growl.info('请选择需要删除的记录.');
		return;
	}
	var selCount=idsArray.length;
	var idsStr=idsArray.join(',');
	goolov.msgbox.confirm('删除确认','您确认删除这<span class="highlight">'+selCount+'</span>项记录吗?删除后将不可恢复!',function(r){
			if(r){
				$.ajax({
					type : 'post',
					url : config.deleteOutJsonUrl,
					data : {id:idsStr},
					dataType:'json',
					beforeSend :function() {
						goolov.growl.waiting('正在删除中!请稍后...');
					},
					success : function(result) {
						goolov.growl.unwaiting();
						if (result&&result.success) {
							goolov.growl.success(result.message);
							refresh();
						}else if(result&&result.message){
							goolov.msgbox.error(result.message);
						}else{
							goolov.msgbox.error();
						}
					},
					error:function(request,status,errorThrown) {
						goolov.growl.unwaiting();
						goolov.msgbox.error();
					}
				});
			}
	});
}
/******del all data   *******/
function delAllData(){
		goolov.msgbox.confirm('删除确认','您确认删除所有记录吗?删除后将不可恢复!',function(r){
		if(r){
			$.ajax({
					type : 'get',
					url : config.deleteOutJsonAllUrl,
					dataType:'json',
					beforeSend :function() {
						goolov.growl.waiting('正在删除中!请稍后...');
					},
					success : function(result) {
						goolov.growl.unwaiting();
						if (result&&result.success) {
							goolov.growl.success(result.message);
							refresh();
						}else if(result&&result.message){
							goolov.msgbox.error(result.message);
						}else{
							goolov.msgbox.error();
						}
					},
					error:function(request,status,errorThrown) {
						goolov.growl.unwaiting();
						goolov.msgbox.error();
					}
				});
		}
	});
}
<%if(ServiceStereotypeUtil.isApplied_impExcel(uml2Class)){%>
/******export excel*******/
function exportExcel(){
	var paramSerialize=grid.getParamsString();
	var exportExcelFileUrl=ctx+'<%=named.getUrl(WebUrlName.exportExcelFile)%>';
	location.href=goolov.addUrlParams(exportExcelFileUrl,paramSerialize);
}
/******import importExcel**********/
var importExcelWin;
function importExcelWinInit(){
	if(!importExcelWin){
		importExcelWin=new goolov.winbox({
			width:goolov.winWidth(<%=PageHelper.getWinWidth(uml2Class)%>),
			height:goolov.winHeight(<%=PageHelper.getWinHeight(uml2Class)%>),
			url:ctx+'<%=named.getUrl(WebUrlName.importExcelFile)%>'
		});
	}
}
function importExcelWinOpen(settings){
	importExcelWinInit();
	importExcelWin.open(settings);
}
function importExcelWinClose(){
	importExcelWin.close();
}
function importExcelWinCloseAndRefresh(){
	importExcelWinClose();
	refresh();
}
function importExcel(){
	var title=config.baseTitle+'->导入Excel文件数据';
	importExcelWinOpen({title:title});
}
<%}%>
<%
/*****************************************************************
 * rel O2MManagerPage
/*****************************************************************/
%>
<%List<Property> O2MManagerPageList=ViewInputHelper.getApplyO2MManagerPage(uml2Class);%>
<%if(null!=O2MManagerPageList&&!O2MManagerPageList.isEmpty()){%>
<%	for(Iterator<Property> iter=O2MManagerPageList.iterator();iter.hasNext();){%>
<%		Property property=iter.next();%>
<%		if(property.getName().equals(curProperty.getName())){%>
<%			continue;%>
<%		}%>
<%		String propertyUncapSafeName=ModelHelper.getUncapName(property);%>
<%		Type propertyType=property.getType();%>
<%		Class relTargetClass=(Class)propertyType;%>
<%		//String relTargetClassCapName=NameHelper.getCapName(relTargetClass);%>
<%		//String relTargetClassUncapName=NameHelper.getUncapName(relTargetClass);%>
<%		String relTargetClassCommentName=TypeHelper.getDocumentationOrName(relTargetClass);%>
<%		String relO2MManager=NamedUtil.getPropertyNamed(relTargetClass,PropertyNamedRuleKind.relO2MManager);%>
<% 		Property propertyTypeIdProperty=EntityHelper.getIDProperty(relTargetClass);%>
<% 		String propertyTypeIdPropertyUncapSafeName=NameHelper.uncapSafeName(propertyTypeIdProperty);%>
/*******rel GsysCodevalue manager**********/
var <%=relO2MManager%>Win;
function <%=relO2MManager%>WinInit(){
	if(!<%=relO2MManager%>Win){
		<%=relO2MManager%>Win=new goolov.winbox({
			width:goolov.winWidth(750),
			height:goolov.winHeight(450),
			modal:true
		});
	}
}
function <%=relO2MManager%>WinOpen(settings){
	<%=relO2MManager%>WinInit();
	<%=relO2MManager%>Win.open(settings);
}
function <%=relO2MManager%>WinClose(){
	<%=relO2MManager%>Win.close();
}
function <%=relO2MManager%>(id,name){
	var title=config.baseTitle+'-><%=relTargetClassCommentName%>('+name+')->管理';
	var url=ctx+'<%=MdaHelper.getModelUrlByRel(relTargetClass,uml2Class,WebUrlName.relO2MManage)%>?<%=propertyUncapSafeName%>.<%=propertyTypeIdPropertyUncapSafeName%>='+id;
	<%=relO2MManager%>WinOpen({title:title,url:url});
}
<%	}%>
<%}%>